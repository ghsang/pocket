---
import ExpenseForm from "./_expense-form.astro";
import BudgetForm from "./_budget-form.astro";

const { user } = Astro.props;
---

<dialog
	class="backdrop:bg-black/50 m-0"
>
	<tab-control>
		<div class="fixed bottom-0 bg-white text-md pt-2 shadow-md w-full rounded-t-md animate-slide-from-bottom">
			<div class="px-4 py-2">
				<div class="bg-gray-100 flex w-full bg-gray-100 p-1 rounded">
					<button class="tab-btn w-full py-2 rounded bg-white" data-tab="expense">지출</button>
					<button class="tab-btn w-full py-2 rounded" data-tab="budget">예산</button>
				</div>
			</div>
			<div id="expense" class="tab-content">
				<ExpenseForm user={user} />
			</div>
			<div id="budget" class="tab-content hidden">
				<BudgetForm />
			</div>
		</div>
	</tab-control>
</dialog>

<script>
	import { $, $$ } from 'lib/client';

	class TabControl extends HTMLElement {
		constructor() {
			super();

			const tabButtons = $$<HTMLButtonElement>(this, '.tab-btn');
			const tabContents = $$<HTMLDivElement>(this, '.tab-content');

			for (const tabButton of tabButtons) {
				tabButton.addEventListener('click', (event) => {
					for (const button of tabButtons) button.classList.remove('bg-white');
					for (const content of tabContents) content.classList.add('hidden');

					const tabId = tabButton.dataset.tab;

					$(this, `#${tabId}`).classList.remove('hidden');

					(event.target as HTMLButtonElement).classList.add('bg-white');
				});
			}
		}
	}

	if (!customElements.get('tab-control')) {
		customElements.define('tab-control', TabControl);
	}
</script>
