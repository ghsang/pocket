// Code generated by ent, DO NOT EDIT.

package ent

import (
	"pocket/ent/schema"
	"pocket/ent/transaction"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescUser is the schema descriptor for user field.
	transactionDescUser := transactionFields[1].Descriptor()
	// transaction.UserValidator is a validator for the "user" field. It is called by the builders before save.
	transaction.UserValidator = transactionDescUser.Validators[0].(func(string) error)
	// transactionDescCategory is the schema descriptor for category field.
	transactionDescCategory := transactionFields[3].Descriptor()
	// transaction.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	transaction.CategoryValidator = transactionDescCategory.Validators[0].(func(string) error)
	// transactionDescDescription is the schema descriptor for description field.
	transactionDescDescription := transactionFields[4].Descriptor()
	// transaction.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	transaction.DescriptionValidator = transactionDescDescription.Validators[0].(func(string) error)
	// transactionDescPaymentMethod is the schema descriptor for paymentMethod field.
	transactionDescPaymentMethod := transactionFields[6].Descriptor()
	// transaction.PaymentMethodValidator is a validator for the "paymentMethod" field. It is called by the builders before save.
	transaction.PaymentMethodValidator = transactionDescPaymentMethod.Validators[0].(func(string) error)
	// transactionDescID is the schema descriptor for id field.
	transactionDescID := transactionFields[0].Descriptor()
	// transaction.DefaultID holds the default value on creation for the id field.
	transaction.DefaultID = transactionDescID.Default.(func() uuid.UUID)
}
